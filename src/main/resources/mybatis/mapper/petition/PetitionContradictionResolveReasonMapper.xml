<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssy.petition.dao.petition.PetitionContradictionResolveReasonMapper">
    <resultMap id="BaseResultMap" type="com.ssy.petition.entity.petition.PetitionContradictionResolveReason">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="contradiction_id" jdbcType="BIGINT" property="contradictionId"/>
        <result column="reason" jdbcType="VARCHAR" property="reason"/>
        <result column="insert_on" jdbcType="TIMESTAMP" property="insertOn"/>
        <result column="insert_by" jdbcType="BIGINT" property="insertBy"/>
        <result column="update_on" jdbcType="TIMESTAMP" property="updateOn"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
        <result column="delete_flag" jdbcType="BIT" property="deleteFlag"/>
        <result column="delete_on" jdbcType="TIMESTAMP" property="deleteOn"/>
        <result column="delete_by" jdbcType="BIGINT" property="deleteBy"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, contradiction_id, reason, insert_on, insert_by, update_on, update_by, delete_flag,
    delete_on, delete_by, remarks
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from petition_contradiction_resolve_reason
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from petition_contradiction_resolve_reason
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByContradictionId" parameterType="java.lang.Long">
        delete
        from petition_contradiction_resolve_reason
        where contradiction_id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByContradictionIdAndNotExists">
        delete from petition_contradiction_resolve_reason
        where contradiction_id = #{contradictionId,jdbcType=BIGINT}
        <if test="petitionContradictionResolveReasons!=null and petitionContradictionResolveReasons.size > 0">
            AND id NOT IN
            <foreach item="item" index="index" collection="petitionContradictionResolveReasons" open="(" separator="," close=")">
                #{item.id}
            </foreach>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ssy.petition.entity.petition.PetitionContradictionResolveReason">
        insert into petition_contradiction_resolve_reason (id, contradiction_id, reason,
                                                           insert_on, insert_by, update_on,
                                                           update_by, delete_flag, delete_on,
                                                           delete_by, remarks)
        values (#{id,jdbcType=BIGINT}, #{contradictionId,jdbcType=BIGINT}, #{reason,jdbcType=VARCHAR},
                #{insertOn,jdbcType=TIMESTAMP}, #{insertBy,jdbcType=BIGINT}, #{updateOn,jdbcType=TIMESTAMP},
                #{updateBy,jdbcType=BIGINT}, #{deleteFlag,jdbcType=BIT}, #{deleteOn,jdbcType=TIMESTAMP},
                #{deleteBy,jdbcType=BIGINT}, #{remarks,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ssy.petition.entity.petition.PetitionContradictionResolveReason">
        insert into petition_contradiction_resolve_reason
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="contradictionId != null">
                contradiction_id,
            </if>
            <if test="reason != null">
                reason,
            </if>
            <if test="insertOn != null">
                insert_on,
            </if>
            <if test="insertBy != null">
                insert_by,
            </if>
            <if test="updateOn != null">
                update_on,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="deleteOn != null">
                delete_on,
            </if>
            <if test="deleteBy != null">
                delete_by,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="contradictionId != null">
                #{contradictionId,jdbcType=BIGINT},
            </if>
            <if test="reason != null">
                #{reason,jdbcType=VARCHAR},
            </if>
            <if test="insertOn != null">
                #{insertOn,jdbcType=TIMESTAMP},
            </if>
            <if test="insertBy != null">
                #{insertBy,jdbcType=BIGINT},
            </if>
            <if test="updateOn != null">
                #{updateOn,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="deleteOn != null">
                #{deleteOn,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteBy != null">
                #{deleteBy,jdbcType=BIGINT},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssy.petition.entity.petition.PetitionContradictionResolveReason">
        update petition_contradiction_resolve_reason
        <set>
            <if test="contradictionId != null">
                contradiction_id = #{contradictionId,jdbcType=BIGINT},
            </if>
            <if test="reason != null">
                reason = #{reason,jdbcType=VARCHAR},
            </if>
            <if test="insertOn != null">
                insert_on = #{insertOn,jdbcType=TIMESTAMP},
            </if>
            <if test="insertBy != null">
                insert_by = #{insertBy,jdbcType=BIGINT},
            </if>
            <if test="updateOn != null">
                update_on = #{updateOn,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="deleteOn != null">
                delete_on = #{deleteOn,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteBy != null">
                delete_by = #{deleteBy,jdbcType=BIGINT},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssy.petition.entity.petition.PetitionContradictionResolveReason">
        update petition_contradiction_resolve_reason
        set contradiction_id = #{contradictionId,jdbcType=BIGINT},
            reason           = #{reason,jdbcType=VARCHAR},
            insert_on        = #{insertOn,jdbcType=TIMESTAMP},
            insert_by        = #{insertBy,jdbcType=BIGINT},
            update_on        = #{updateOn,jdbcType=TIMESTAMP},
            update_by        = #{updateBy,jdbcType=BIGINT},
            delete_flag      = #{deleteFlag,jdbcType=BIT},
            delete_on        = #{deleteOn,jdbcType=TIMESTAMP},
            delete_by        = #{deleteBy,jdbcType=BIGINT},
            remarks          = #{remarks,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="getListByContradictionId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM petition_contradiction_resolve_reason
        WHERE
        contradiction_id = #{id,jdbcType=BIGINT}
    </select>

    <insert id="insertList">
        insert into petition_contradiction_resolve_reason (id, contradiction_id, reason,
        insert_on, insert_by, update_on,
        update_by, delete_flag, delete_on,
        delete_by, remarks)
        values
        <foreach collection="list" separator="," item="item" index="index">
            (#{item.id,jdbcType=BIGINT}, #{item.contradictionId,jdbcType=BIGINT}, #{item.reason,jdbcType=VARCHAR},
            #{item.insertOn,jdbcType=TIMESTAMP}, #{item.insertBy,jdbcType=BIGINT}, #{item.updateOn,jdbcType=TIMESTAMP},
            #{item.updateBy,jdbcType=BIGINT}, #{item.deleteFlag,jdbcType=BIT}, #{item.deleteOn,jdbcType=TIMESTAMP},
            #{item.deleteBy,jdbcType=BIGINT}, #{item.remarks,jdbcType=VARCHAR})
        </foreach>
    </insert>
</mapper>