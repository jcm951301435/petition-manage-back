<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssy.petition.dao.sys.SysUserMapper">
    <resultMap id="BaseResultMap" type="com.ssy.petition.entity.sys.SysUser">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="insert_on" jdbcType="TIMESTAMP" property="insertOn"/>
        <result column="insert_by" jdbcType="BIGINT" property="insertBy"/>
        <result column="update_on" jdbcType="TIMESTAMP" property="updateOn"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
        <result column="delete_flag" jdbcType="BIT" property="deleteFlag"/>
        <result column="delete_on" jdbcType="TIMESTAMP" property="deleteOn"/>
        <result column="delete_by" jdbcType="BIGINT" property="deleteBy"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="company_id" jdbcType="BIGINT" property="companyId"/>
    </resultMap>

    <resultMap id="SysUserListResultMap" type="com.ssy.petition.dto.sys.result.SysUserListResult">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="insert_on" jdbcType="TIMESTAMP" property="insertOn"/>
        <result column="insert_by" jdbcType="BIGINT" property="insertBy"/>
        <result column="insert_by_name" jdbcType="VARCHAR" property="insertByName"/>
        <result column="update_on" jdbcType="TIMESTAMP" property="updateOn"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
        <result column="delete_flag" jdbcType="BIT" property="deleteFlag"/>
        <result column="delete_on" jdbcType="TIMESTAMP" property="deleteOn"/>
        <result column="delete_by" jdbcType="BIGINT" property="deleteBy"/>
        <result column="remarks" jdbcType="VARCHAR" property="remarks"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
        <result column="company_id" jdbcType="BIGINT" property="companyId"/>
        <result column="company_name" jdbcType="VARCHAR" property="companyName"/>
    </resultMap>

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="orCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, username, password, status, insert_on, insert_by, update_on, update_by,
    delete_flag, delete_on, delete_by, remarks, company_id
    </sql>
    <select id="selectByExample" parameterType="com.ssy.petition.entity.base.example.BaseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ssy.petition.entity.sys.SysUser">
        insert into sys_user (id, username, password,
                              status, real_name, insert_on,
                              insert_by, update_on, update_by,
                              delete_flag, delete_on, delete_by,
                              remarks, company_id)
        values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{status,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{insertOn,jdbcType=TIMESTAMP},
                #{insertBy,jdbcType=BIGINT}, #{updateOn,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT},
                #{deleteFlag,jdbcType=BIT}, #{deleteOn,jdbcType=TIMESTAMP}, #{deleteBy,jdbcType=BIGINT},
                #{remarks,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.ssy.petition.entity.sys.SysUser">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="realName != null">
                real_name,
            </if>
            <if test="insertOn != null">
                insert_on,
            </if>
            <if test="insertBy != null">
                insert_by,
            </if>
            <if test="updateOn != null">
                update_on,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="deleteFlag != null">
                delete_flag,
            </if>
            <if test="deleteOn != null">
                delete_on,
            </if>
            <if test="deleteBy != null">
                delete_by,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="companyId != null">
                company_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                #{realName,jdbcType=VARCHAR},
            </if>
            <if test="insertOn != null">
                #{insertOn,jdbcType=TIMESTAMP},
            </if>
            <if test="insertBy != null">
                #{insertBy,jdbcType=BIGINT},
            </if>
            <if test="updateOn != null">
                #{updateOn,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="deleteOn != null">
                #{deleteOn,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteBy != null">
                #{deleteBy,jdbcType=BIGINT},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                #{companyId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ssy.petition.entity.sys.SysUser">
        update sys_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="realName != null">
                real_name = #{realName,jdbcType=VARCHAR},
            </if>
            <if test="insertOn != null">
                insert_on = #{insertOn,jdbcType=TIMESTAMP},
            </if>
            <if test="insertBy != null">
                insert_by = #{insertBy,jdbcType=BIGINT},
            </if>
            <if test="updateOn != null">
                update_on = #{updateOn,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag,jdbcType=BIT},
            </if>
            <if test="deleteOn != null">
                delete_on = #{deleteOn,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteBy != null">
                delete_by = #{deleteBy,jdbcType=BIGINT},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="companyId != null">
                company_id = #{companyId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ssy.petition.entity.sys.SysUser">
        update sys_user
        set username    = #{username,jdbcType=VARCHAR},
            password    = #{password,jdbcType=VARCHAR},
            status      = #{status,jdbcType=VARCHAR},
            real_name   = #{realName,jdbcType=VARCHAR},
            insert_on   = #{insertOn,jdbcType=TIMESTAMP},
            insert_by   = #{insertBy,jdbcType=BIGINT},
            update_on   = #{updateOn,jdbcType=TIMESTAMP},
            update_by   = #{updateBy,jdbcType=BIGINT},
            delete_flag = #{deleteFlag,jdbcType=BIT},
            delete_on   = #{deleteOn,jdbcType=TIMESTAMP},
            delete_by   = #{deleteBy,jdbcType=BIGINT},
            remarks     = #{remarks,jdbcType=VARCHAR},
            company_id  = #{companyId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getRoleByUserId" resultMap="com.ssy.petition.dao.sys.SysRoleMapper.BaseResultMap">
        SELECT DISTINCT
            r.id, r.name, r.description, r.sort, r.insert_on, r.insert_by, r.update_on, r.update_by, r.delete_flag,
            r.delete_on, r.delete_by, r.remarks, r.filter_data
        FROM sys_user_role_relation ur
                 LEFT JOIN sys_role r ON ur.role_id = r.id
        WHERE ur.user_id = #{userId}
    </select>

    <select id="getPermissionListById" resultMap="com.ssy.petition.dao.sys.SysPermissionMapper.BaseResultMap">
        SELECT DISTINCT p.id,
                        p.pid,
                        p.name,
                        p.value,
                        p.icon,
                        p.type,
                        p.uri,
                        p.sort,
                        p.insert_on,
                        p.insert_by,
                        p.update_on,
                        p.update_by,
                        p.delete_flag,
                        p.delete_on,
                        p.delete_by,
                        p.remarks
        FROM sys_user_role_relation ur
                 LEFT JOIN sys_role r ON ur.role_id = r.id
                 LEFT JOIN sys_role_permission_relation rp ON r.id = rp.role_id
                 LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE ur.user_id = #{userId}
    </select>

    <select id="getUserList" resultMap="SysUserListResultMap">
        SELECT
        u.id,u.username,u.real_name,u.status,u.insert_on,u.insert_by,
        FT_getUsernameById(u.insert_by) as insert_by_name,
        u.update_on,u.update_by,u.delete_flag,u.delete_on,u.delete_by,u.remarks,
        r.id as role_id,r.name as role_name, u.company_id,
        FT_getCompanynameById(u.company_id) as company_name
        FROM sys_user u
        LEFT JOIN sys_user_role_relation ur ON u.id=ur.user_id
        LEFT JOIN sys_role r ON ur.role_id=r.id
        WHERE
        u.delete_flag=0
        <if test="queryParam.username!=null">
            AND username LIKE concat("%", #{queryParam.username}, "%")
        </if>
        <if test="queryParam.realName!=null">
            AND real_name LIKE concat("%", #{queryParam.realName}, "%")
        </if>
        <if test="queryParam.companyId!=null">
            AND company_id = #{queryParam.companyId}
        </if>
        <if test="queryParam.companyName!=null">
            AND company_id in
                (
                  SELECT id FROM petition_company
                  WHERE name LIKE concat("%", #{queryParam.companyName}, "%")
                )
        </if>
        <if test="queryParam.insertOnFrom!=null">
            AND u.insert_on &gt;= #{queryParam.insertOnFrom}
        </if>
        <if test="queryParam.insertOnTo!=null">
            AND u.insert_on &lt; #{queryParam.insertOnTo}
        </if>
        ORDER BY username
    </select>

</mapper>